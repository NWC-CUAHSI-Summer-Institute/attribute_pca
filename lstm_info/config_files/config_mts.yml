# --- Experiment configurations --------------------------------------------------------------------

# experiment name, used as folder name
experiment_name: NOAH_MP_Attributes_hourly

# files to specify training, validation and test basins (relative to code root or absolute path)
train_basin_file: basins.txt
validation_basin_file: basins.txt
test_basin_file: basins.txt

# training, validation and test time periods (format = 'dd/mm/yyyy')
train_start_date: "01/10/2000"
train_end_date: "30/09/2008"
validation_start_date: "01/10/1983"
validation_end_date: "30/09/1985"
test_start_date: "01/10/1990"
test_end_date: "30/09/1999"

seed: 0

# input and output frequencies
use_frequencies:
  - 1H
  - 1D

# which GPU (id) to use [in format of cuda:0, cuda:1 etc, or cpu or None]
device: cuda:0

# --- Validation configuration ---------------------------------------------------------------------

# specify after how many epochs to perform validation
validate_every: 25

# specify how many random basins to use for validation
validate_n_random_basins: 999

# specify which metrics to calculate during validation (see neuralhydrology.evaluation.metrics)
# this can either be a list or a dictionary. If a dictionary is used, the inner keys must match the name of the
# target_variable specified below. Using dicts allows for different metrics per target variable.
metrics:
  - NSE
  
allow_subsequent_nan_losses: 150

# --- Model configuration --------------------------------------------------------------------------

# base model type [lstm, ealstm, cudalstm, embcudalstm, mtslstm]
# (has to match the if statement in modelzoo/__init__.py)
model: mtslstm

# prediction head [regression]. Define the head specific parameters below
head: regression

# ----> Regression settings <----
output_activation: linear

# ----> General settings <----

# Number of cell states of the LSTM
hidden_size: 64

# Initial bias value of the forget gate
initial_forget_bias: 3

# Dropout applied to the output of the LSTM
output_dropout: 0.4

# --- Training configuration -----------------------------------------------------------------------

# specify optimizer [Adam]
optimizer: Adam

# specify loss [MSE, NSE, RMSE]
loss: NSE

# specify regularization
regularization:
  - tie_frequencies

# specify learning rates to use starting at specific epochs (0 is the initial learning rate)
learning_rate:
  0: 1e-2
  2: 9.5e-3
  4: 9.0e-3
  6: 8.5e-3
  8: 8.0e-3
  10: 7.5e-3
  12: 7.0e-3
  14: 6.5e-3
  16: 6.0e-3
  18: 5.0e-3

# Mini-batch size
batch_size: 256

# Number of training epochs
epochs: 20

# If a value, clips the gradients during training to that norm.
clip_gradient_norm: 1

# Defines which time steps are used to calculate the loss. Can't be larger than seq_length.
# If use_frequencies is used, this needs to be a dict mapping each frequency to a predict_last_n-value, else an int.
predict_last_n:
  1D: 1
  1H: 24

# Length of the input sequence
# If use_frequencies is used, this needs to be a dict mapping each frequency to a seq_length, else an int.
seq_length:
  1D: 365
  1H: 336

# Number of parallel workers used in the data pipeline
num_workers: 8

# Log the training loss every n steps
log_interval: 5

# If true, writes logging results into tensorboard file
log_tensorboard: True

# If a value and greater than 0, logs n random basins as figures during validation
log_n_figures: 0

# Save model weights every n epochs
save_weights_every: 5

# --- Data configurations --------------------------------------------------------------------------

# which data set to use [camels_us, camels_gb, global, hourly_camels_us]
dataset: hourly_camels_us

# Path to data set root
data_dir: ../data/CAMELS_US

# Forcing product [daymet, maurer, maurer_extended, nldas, nldas_extended, nldas_hourly]
# can be either a list of forcings or a single forcing product
forcings:
  - nldas_hourly
  - nldas

dynamic_inputs:
  1D:
    - PRCP(mm/day)_nldas
    - SRAD(W/m2)_nldas
    - Tmax(C)_nldas
    - Tmin(C)_nldas
    - Vp(Pa)_nldas
  1H:
    - longwave_radiation_nldas_hourly
    - shortwave_radiation_nldas_hourly
    - temperature_nldas_hourly
    - total_precipitation_nldas_hourly
    # - convective_fraction_nldas_hourly
    # - potential_energy_nldas_hourly
    # - potential_evaporation_nldas_hourly
    # - pressure_nldas_hourly
    # - specific_humidity_nldas_hourly
    # - wind_u_nldas_hourly
    # - wind_v_nldas_hourly

static_attributes:
  - vcmx25_mean
  - mfsno_mean
  - cwpvt_mean
  # - aridity
  # - elev_mean
#   - slope_mean
#   - slope_mean_noahmp

# which columns to use as target
target_variables:
  - qobs_mm_per_hour
#  - QObs(mm/d)

# clip negative predictions to zero for all variables listed below. Should be a list, even for single variables.
clip_targets_to_zero:
  - qobs_mm_per_hour
#  - QObs(mm/d)
